 rule DefaultValues salience 10000000 {
    when 
        true
    then
        
        result.Put("integer", "false");

        result.Put("string", "false");

        ctx.AddItem("integer_group_0_entries", "1");

        ctx.AddItem("integer_group_0_entries", "45");

        ctx.AddItem("integer_group_0_entries", "50");

        ctx.AddItem("integer_group_0_entries", "78");

        ctx.AddItem("string_group_0_entries", "single");

        ctx.AddItem("string_group_0_entries", "double");
        
        ctx.AddItem("string_group_0_entries", "triple");

        Retract("DefaultValues");
}

rule feat_integer salience 1000 {
    when 
        true 
    then
        ctx.Put("integer", processor.Boolean(result.GetBool("integer_group")));

        result.Put("integer", ctx.Get("integer"));
         
        Retract("feat_integer");
}

rule feat_string salience 1000 {
    when 
        true 
    then
        ctx.Put("string", processor.Boolean(result.GetBool("string_group")));

        result.Put("string", ctx.Get("string"));
         
        Retract("feat_string");
}

rule feat_integer_group_0_value salience 1003 {
    when
        true
    then
        ctx.Put("integer_group_0_value", "mynumbers");

        Retract("feat_integer_group_0_value");
}

rule feat_integer_group_0 salience 1002 {
    when
        true
    then
        ctx.Put("integer_group_0", processor.Boolean(processor.Contains(ctx.GetSlice("integer_group_0_entries"), ctx.Get("integer_group_0_value"))));

        result.Put("integer_group_0", ctx.Get("integer_group_0"));

        Retract("feat_integer_group_0");
}

rule feat_integer_group salience 1001 {
    when
        true
    then
        ctx.Put("integer_group", processor.Boolean(result.GetBool("integer_group_0")));

        result.Put("integer_group", ctx.Get("integer_group"));

        Retract("feat_integer_group");
}

rule feat_string_group_0_value salience 1003 {
    when
        true
    then
        ctx.Put("string_group_0_value", "mystrings");

        Retract("feat_string_group_0_value");
}

rule feat_string_group_0 salience 1002 {
    when
        true
    then
        ctx.Put("string_group_0", processor.Boolean(processor.Contains(ctx.GetSlice("string_group_0_entries"), ctx.Get("string_group_0_value"))));

        result.Put("string_group_0", ctx.Get("string_group_0"));

        Retract("feat_string_group_0");
}

rule feat_string_group salience 1001 {
    when
        true
    then
        ctx.Put("string_group", processor.Boolean(result.GetBool("string_group_0")));

        result.Put("string_group", ctx.Get("string_group"));

        Retract("feat_string_group");
}
